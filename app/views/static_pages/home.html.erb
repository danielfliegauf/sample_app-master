<% provide(:title, 'Home') %>

<% if signed_in? %>

<% if current_user.homebase == '' || current_user.homebase == nil %>
<div class="homebase_linkkill">
  <div class="homebase">
    <div id="hombase_form" class="allusers row">
      <h2 style="font-weight: bold;">2 Dinge noch bevor es losgeht</h2>
  <div class="input-append span2 offset2">

    <%= form_for(current_user, remote: true) do |f| %>

    <%= f.label :homebase, "Deine Heimatstadt", class: "lead" %>:
  <div id="prependedInputErr"></div>
  <input class="input-large" id="prependedInput" name="user[homebase]" type="text" data-provide="typeahead" autocomplete="off">
  

  <%= f.submit "Weiter", class: "btn btn-primary", :onclick => "return validateHomebase()" %>
<% end %>
    </div></div>
<div id="homebase_form2" class="allusers row" style="display: none;">
      <h2 style="font-weight: bold; margin-bottom: -10px;">Wähle deine Interessen:</h2><p class="" style="text-align: center;">(klicke auf die Namen)</p>
  <div class="span4 offset2">
    <% i=2 %>
    <%= form_for(current_user.interests.build, remote: true) do |f| %>
      <% sports.sort.each do |hobby| %>
      <div class="field span2 left">       
            <label><%= check_box_tag "interests["+hobby+"]" %> <%= t('home.micropost.'+hobby) %></label>
      </div>
      
     <% end %>
     <br><br>
    <%= f.submit "Fertig", class: "btn btn-primary interestbutton" %>
  <% end %>

</div>
</div>
  

</div></div>
<% end %>
<div class="row">
  <aside class="span4">
    <section>
      <%= render 'shared/user_info' %>
    </section>
    <section>
      <%= render 'shared/stats' %>
    </section>
    <section>
      <div id="ie08"></div>
      <%= render 'shared/micropost_form' %>
    </section>
  </aside>
  <div class="span8">
      <% if @visitors.any? %>
    <div class="users row" style="margin-left: 20px;">
      <% @visitors.each do |v| %>
      <% if v.uid.nil? %> <% break %> <% end %>
      <div class="nomargin" style="width: 70px; height: 70px;">
        <%= link_to gravatar_for(v.visitor, size: "70"), v.visitor %>
      </div>
      <% end %>
      <%= image_tag "angelbracket.png", style: "padding-left: 10px; padding-top: 5px; float: left;" %>
      <p class="small lead">User,<br> <%= t('whovisited') %><br> <%= t('yourprofile') %></p>
    </div>
    <% end %>
    <%= render 'shared/feed' %>

  </div>
</div>

<script type="text/javascript">
var selectedState;

$('#prependedInput').typeahead({
    source: function (query, process) {
        states = [];
    map = {};
 
    var data = [
        {"stateCode": "Karlsruhe", "stateName": "<%= escape_javascript(t('home.micropost.Karlsruhe')) %>"},
        {"stateCode": "Munich", "stateName": "<%= escape_javascript(t('home.micropost.Munich')) %>"},
        {"stateCode": "Konstanz", "stateName": "<%= escape_javascript(t('home.micropost.Konstanz')) %>"},
        {"stateCode": "Stuttgart", "stateName": "<%= escape_javascript(t('home.micropost.Stuttgart')) %>"},
        {"stateCode": "Singen", "stateName": "<%= escape_javascript(t('home.micropost.Singen')) %>"}
    ];
 
    $.each(data, function (i, state) {
        map[state.stateName] = state;
        states.push(state.stateName);
    });
 
    process(states);
    },
    updater: function (item) {
        selectedState = map[item].stateCode;
        document.getElementById('user_homebase').value = selectedState;
        return item;
    },
    matcher: function (item) {
        if (item.toLowerCase().indexOf(this.query.trim().toLowerCase()) != -1) {
        return true;
    }
    },
    sorter: function (items) {
        return items.sort();
    },
    highlighter: function (item) {
       var regex = new RegExp( '(' + this.query + ')', 'gi' );
       return item.replace( regex, "<strong>$1</strong>" );
    },
});

if(typeof(String.prototype.trim) === "undefined")
{
    String.prototype.trim = function() 
    {
        return String(this).replace(/^\s+|\s+$/g, '');
    };
}

function validateHomebase(){
  var citylist = new Array("Karlsruhe",
              "Konstanz",
              "Munich",
              "Stuttgart",
              "Singen"

          );
  var item = document.getElementById('user_homebase').value.trim();
  
  if (item == '' || item == null){
    document.getElementById('prependedInputErr').value = "Error: Bitte erneut eingeben!"
    document.getElementById('prependedInput').focus();
    return false;
  }
  for (var i = 0; i < citylist.length; i++) {
    if(item == citylist[i]) {
      return true;
      break;
      
    }
    
  }
  
    return false;
};


function validateform(){

  if (document.getElementById('micropost_hobby').value == '' || document.getElementById('combobox').value == null){
    alert('Hobby muss ausgefüllt sein!');
    document.getElementById('micropost_hobby').focus();
    return false;
  }

  if (document.getElementById('micropost_place').value == '' || document.getElementById('micropost_place').value == null){
    alert('Ort muss ausgefüllt sein!');
    document.getElementById('micropost_place').focus();
    return false;
  }

  if (document.getElementById('micropost_country').value == '' || document.getElementById('micropost_country').value == null ){
    alert('Country muss ausgefüllt sein! Klicke bitte auf die Google Maps - Karte!');
    return true;
  }

  return true;
}



window.onload = initialize();

//code for GMAPS

  var geocoder = new google.maps.Geocoder();
  var map;
  // var infowindow = new google.maps.InfoWindow();
  var marker;
  var city; //2mal vorhanden!
  var country;
  var zipcode;
 
   

  function initialize() {
   //if user changes the place via select menu
   if (document.getElementById('micropost_place').addEventListener) {
    document.getElementById('micropost_place').addEventListener("change",
                         function(){
                          setMap(this.value);
                         }, false);
   }
   else {
    //has to be there otherwhise the ie08 innerHTML is not changing. because of an error? i dont know ;)
    document.getElementById('micropost_place').attachEvent("change",
                         function(){
                          setMap(this.value);
                         });
   }


//GMpas Options + map

    var myOptions = {
          zoom: 14,
          mapTypeId: google.maps.MapTypeId.ROADMAP,
            streetViewControl: false,
            mapTypeControl: false
        };

        map = new google.maps.Map(document.getElementById('map_canvas'), myOptions);

        // Try HTML5 geolocation
        if(navigator.geolocation) { 
          //alert("ifnavgeo");
          navigator.geolocation.getCurrentPosition(function(position) { 
            //alert("successcallbacK");
            var pos = new google.maps.LatLng(position.coords.latitude,
                                             position.coords.longitude);


            //center the map at the current location in the beginning
            map.setCenter(pos);
            marker = new google.maps.Marker({
                    position: pos,
                    map: map,
                    animation: google.maps.Animation.DROP
            });

            //set hidden field in micropost_form
            document.getElementById("micropost_latlng").value = pos;

            //set micropost_place with the geolocation position
            geocoder.geocode({'latLng': pos}, function(results, status) {
                  if (status == google.maps.GeocoderStatus.OK) {
                  if (results[1]) {

                      //find citycounty name
                      for (var i=0; i<results[0].address_components.length; i++) {
                      for (var b=0;b<results[0].address_components[i].types.length;b++) {

                        //there are different types that might hold a city admin_area_lvl_1 usually does in come cases looking for sublocality type will be more appropriate
                        if (results[0].address_components[i].types[b] == "locality") {
                    //this is the object you are looking for
                            city= results[0].address_components[i];
                        }
                        if (results[0].address_components[i].types[b] == "postal_code") {
                            //this is the object you are looking for
                            zipcode = results[0].address_components[i];
                            
                        }
                        if (results[0].address_components[i].types[b] == "country") {
                            //this is the object you are looking for
                            country = results[0].address_components[i];
                        }
                      }
                      }

                    //document.getElementById('address').innerHTML = city.short_name + " " + city.long_name;
                      
                    document.getElementById('micropost_place').childNodes[0].value = city.short_name;
                    document.getElementById('micropost_place').childNodes[0].innerHTML = city.short_name;
                    document.getElementById('micropost_place').selectedIndex = 0;
                    //document.getElementById('address').innerHTML = address;
                    //document.getElementById('testland').innerHTML = country[country.length-1];
                    document.getElementById('micropost_country').value = country.short_name;
                    document.getElementById('micropost_zipcode').value = zipcode.short_name;
                  }
                  } else {
                  alert("Geocoder failed due to: " + status);
                    }
            });


          }, function() {
            //alert("handleNoGeolocationTRUE");
            handleNoGeolocation(true);
          }); //close function(postition)
        } else {
          // Browser doesn't support Geolocation
          //alert("handleNoGeolocationFALSE");
          handleNoGeolocation(false);
        }

          // add Marker Event
        google.maps.event.addListener(map, 'click', function(event) {
            placeMarker(event.latLng);
        });
 

        function placeMarker(location) {

          //var city;
          geocoder.geocode({'latLng': location}, function(results, status) {
          if (status == google.maps.GeocoderStatus.OK) {
          if (results[1]) {

              //find country name
              for (var i=0; i<results[0].address_components.length; i++) {
              for (var b=0;b<results[0].address_components[i].types.length;b++) {

                //there are different types that might hold a city admin_area_lvl_1 usually does in come cases looking for sublocality type will be more appropriate
                if (results[0].address_components[i].types[b] == "locality") {
                    //this is the object you are looking for
                    city= results[0].address_components[i];
                }
                if (results[0].address_components[i].types[b] == "postal_code") {
                    //this is the object you are looking for
                    zipcode = results[0].address_components[i];
                    
                }
                if (results[0].address_components[i].types[b] == "country") {
                    //this is the object you are looking for
                    country = results[0].address_components[i];
                }
            }
            }

          //document.getElementById('address').innerHTML = city.short_name + " " + city.long_name;
            
          document.getElementById('micropost_place').childNodes[0].value = city.short_name;
          document.getElementById('micropost_place').childNodes[0].innerHTML = city.short_name;
          document.getElementById('micropost_place').selectedIndex = 0;
          //document.getElementById('address').innerHTML = results[0].formatted_address;
          document.getElementById('micropost_country').value = country.short_name;
          document.getElementById('micropost_zipcode').value = zipcode.short_name;
        }
      } else {
        alert("Geocoder failed due to: " + status);
      }
    });


            //make a new marker or delete the old one and create a new one on click
            if (marker == undefined){
                marker = new google.maps.Marker({
                    position: location,
                    map: map,
                    animation: google.maps.Animation.DROP
                });
                //document.getElementById("latitude").innerHTML = location.lng();
                document.getElementById("micropost_latlng").value = location;
            }
            else{
                marker.setPosition(location);
                //document.getElementById("latitude").innerHTML = location.lng();
                document.getElementById("micropost_latlng").value = location;
            }
            map.setCenter(location);

        }

  }

  function handleNoGeolocation(errorFlag) {

    if (errorFlag) {
      var content = 'Error: The Geolocation service failed. Please choose your location manually!';
    } else {
      var content = 'Error: Your browser doesn\'t support geolocation. Please choose your location manually!';
    }
    //alert("Leider hast du keine Geolocation aktiviert. Allerdings kannstu selbst dienen Ort auswählen!") // Hat genervt TODO: Wieder einfügen
    
    var options = {
      map: map,
      position: new google.maps.LatLng('50.2979254', '10.486495800000057'),
      // content: content,
      zoom: 4
    };

    var infowindow = new google.maps.InfoWindow(options);
    map.setCenter(options.position);

    // add Marker Event
        google.maps.event.addListener(map, 'click', function(event) {
            placeMarker(event.latLng);
        });

        //IE08 doesnt know addEventListener
        if (document.getElementById('micropost_place').addEventListener) {
        document.getElementById('micropost_place').addEventListener('click', placeMarker(options.position));
        }
        else {
          document.getElementById('ie08').innerHTML = "Please get yourself a better and SAFE browser: <a href='http://abetterbrowser.org/' target='_new'>Go here for more Information</a>";
          document.getElementById('micropost_latlng').value = '(50.2979254, 10.486495800000057)';
           document.getElementById('micropost_country').value = "DE"; //TODO: Need to get city.object!
           document.getElementById('canvas2').innerHTML = "Sorry but this function is not supported with your browser!";
        }
  }

  function setMap(address){
    geocoder.geocode({'address': address}, function(results, status){
      if (status == google.maps.GeocoderStatus.OK) {
        if (results[0]) {
          map.setCenter(results[0].geometry.location);
          //change hiden_field latlng
         document.getElementById("micropost_latlng").value = results[0].geometry.location;
         document.getElementById("micropost_country").value = " DE";

        
        }
      } else {
        // alert("Geocoder failed due to: " + status);
      }
    }); 
  }

//allgemein und für IE
document.getElementById('micropost_place').childNodes[0].innerHTML = "Bitte auswählen";
document.getElementById('micropost_latlng').value = '(50.2979254, 10.486495800000057)';

var xaa = document.getElementsByName('micropost[latlng]');
document.forms['new_micropost'].elements['micropost[latlng]'].value = '(50.2979254, 10.486495800000057)';


//Datepicker for Micropost Form
 $(document).ready(function() {
  $.datepicker.regional['de'] = {
    closeText: 'fertig', // Display text for close link
    prevText: 'zurück', // Display text for previous month link
    nextText: 'vor', // Display text for next month link
    currentText: 'heute', // Display text for current month link
    monthNames: ['Januar','Februar','März','April','Mai','Juni',
      'Juli','August','September','Oktober','November','Dezember'], // Names of months for drop-down and formatting
    monthNamesShort: ['Jan', 'Feb', 'Mar', 'Apr', 'Mai', 'Jun', 'Jul', 'Aug', 'Sept', 'Okt', 'Nov', 'Dez'], // For formatting
    dayNames: ['Sonntag', 'Montag', 'Dienstag', 'Mittwoch', 'Donnerstag', 'Freitag', 'Samstag'], // For formatting
    dayNamesShort: ['Son', 'Mon', 'Die', 'Mit', 'Don', 'Fr', 'Sam'], // For formatting
    dayNamesMin: ['So','Mo','Di','Mi','Do','Fr','Sa'], // Column headings for days starting at Sunday
    weekHeader: 'Wk', // Column header for week of the year
    dateFormat: 'dd.mm.yy', // See format options on parseDate
    firstDay: 0, // The first day of the week, Sun = 0, Mon = 1, ...
    isRTL: false, // True if right-to-left language, false if left-to-right
    showMonthAfterYear: false, // True if the year select precedes month, false for month then year
    yearSuffix: '' // Additional text to append to the year in the month headers
  };
  $('.datepicker').datetimepicker( $.datepicker.regional['de'], 
                                    $.timepicker.setDefaults($.timepicker.regional['de']) 
                                    );
  



});

//toggle tooltip for helptext and shared_feed
$('#togg').tooltip('toggle');


</script>








<% else %>
<div class="row-fluid">

<!-- When sombody got redirected from Search (*knock knock) he should see a message that he has to be logged in -->
<% if (@not_logged_in) %><h1>Connectify</h1>
  <p> We're sorry, but you must be logged in to write a Micropost.</p>
<% end %>
 <div class="span12" style="background: url('/assets/shut_climbing.jpg') no-repeat right top; height: 600px;">

 <div class="span6">
  <div class="banner span6"><%= image_tag "connectify9.png" %></div>
  <div class='buttonbox'><p class="lead" style="font-size: 1.2em; position: relative; top: -19px;"><%= t('home.findasportpartner') %></p>
    <span class="lead"><%= image_tag "facebook2.png", title: "Connect with Facebook", width: "31px" %>
    <%= link_to t('home.connectme'), "/auth/facebook", id: "sign_in", class: "btn btn-large btn-success" %> <%= t('home.or') %>
    <%= link_to t('home.tourstart'), "#", id: "tourstart", class: "btn btn-large btn-warning" %></span>
  </div>
 <p class="lead"><%= t('home.tryitout') %><b><%= t('home.free') %></b>!</p>



 <p class="lead"><br><br><b>Hallo Konstanzer,</b><br>
  eure Stadt wurde für den Start der BETA-Phase ausgewählt. Für <a href="matilto:comment.connectify@gmail.com">Verbesserungsvorschläge</a> oder <a href="matilto:comment.connectify@gmail.com">Fehlerbenachrichtungen</a> wären wir euch sehr dankbar. <b>Viel Spaß :D </b> </p>
</div>

<div id="tourdiv"><div id='tourwrapper'>
  <%= link_to "x", "#", id: "tourclose" %>
  <div id="tourpic" style="position: relative;"><%= image_tag "Tour1.png" %></div>
  <%= link_to t('home.next'), "#", id: "tournext", class: "btn" %>
  <%= link_to t('home.back'), "#", id: "tourback", class: "btn" %>
  <%= link_to t('home.connectme'), "/auth/facebook", id: "login", class: "btn btn-large btn-success" %></div>
</div>
</div>
</div>





</div><!-- fluid-close -->

<script>
$(document).ready(function() {

  var i;
  var j;

  $('#show_whatfbknows').click( function(event) {
      event.preventDefault();
      $('#whatfbknows').toggle();
  });
   $('#show_whatearns').click( function(event) {
      event.preventDefault();
      $('#whatearns').toggle();
  });
    $('#show_reallyforfree').click( function(event) {
      event.preventDefault();
      $('#reallyforfree').toggle();
  });

  //Tour START
  $('#tourdiv').hide();
  $('#tourback').hide();
  $('#login').hide();

  $('#tourstart').click( function(event) {
      event.preventDefault();
      $('#tourdiv').fadeIn();
      i = 2;
      j = 0;
  });

  $('#tournext').click( function(event) {
    event.preventDefault();
    var k = i;
    if (i == 8) {
        $('#tournext').fadeOut();
        $('#login').fadeIn();
        j = 6;
      }
    i = i+1;
    j = j+1;
      if (i >= 2) {
        $('#tourback').fadeIn();
      }
    $('#tourpic').hide().html( function(){
      var image = '<img src="/assets/Tour'+k+'.png" />';
      
      return image;
    }).fadeIn(1300);    
  });

  $('#tourback').click( function(event) {
    if (j == 0){
      return false;
    }
    event.preventDefault();
    if (j == 1) {
        $('#tourback').fadeOut();
        i = 3;
      }
      var k = j;
      j = j-1;
      i = i-1;
      if (i == 8) {
        $('#tournext').fadeIn();
        $('#login').fadeOut();
      }
    $('#tourpic').hide().html( function(){
      var image = '<img src="/assets/Tour'+k+'.png" />';
      
      return image;
    }).fadeIn(1300);    
  });

  //Tour close
  $('#tourclose').click( function(event) {
    event.preventDefault();
    $('#tourdiv').fadeOut('slow');
  });

});


<!--//--><![CDATA[//><!--
      var images = new Array()
      function preload() {
        for (i = 0; i < preload.arguments.length; i++) {
          images[i] = new Image()
          images[i].src = preload.arguments[i]
        }
      }
      preload(
        "/assets/Tour1.png",
        "/assets/Tour2.png",
        "/assets/Tour3.png",
        "/assets/Tour4.png",
        "/assets/Tour5.png",
        "/assets/Tour6.png",
        "/assets/Tour7.png",
        "/assets/Tour8.png"
      )
    //--><!]]>

    $('.carousel').carousel({
  interval: 8000
})
</script>
<div class="hidden">
</div>
<% end %>


